//=====================================================================================================================
// Решение: LotusPlatform
// Раздел: Модуль чертежной графики
// Подраздел: Графические примитивы
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusCADPrimitiveGeometry.cs
*		Геометрия.
*		Геометрия представляет из себя набор типовых геометрических примитивов - сегментов. Набор сегментов строго 
*	предопределен.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 27.03.2022
//=====================================================================================================================
using System;
using System.Linq;
using System.Collections.Generic;
using System.ComponentModel;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
using Lotus.Maths;
//=====================================================================================================================
namespace Lotus
{
	namespace CAD
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup CadPrimitivs
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Геометрия
		/// </summary>
		/// <remarks>
		/// Геометрия представляет из себя набор типовых геометрических примитивов - сегментов. Набор сегментов строго 
		/// предопределен
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public class CCadPrimitiveGeometry : CCadPrimitive
		{
			#region ======================================= ДАННЫЕ ====================================================
			// Основные параметры
			internal List<CCadSegment> mSegments;
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			//
			// ОСНОВНЫЕ ПАРАМЕТРЫ
			//
			/// <summary>
			/// Набор сегментов геометрии
			/// </summary>
			[Browsable(false)]
			public List<CCadSegment> Segments
			{
				get { return (mSegments); }
			}

			/// <summary>
			/// Начальный сегмент геометрии
			/// </summary>
			public CCadSegment StartSegment
			{
				get { return (mSegments[0]); }
			}

			/// <summary>
			/// Начальный сегмент геометрии как набора точек
			/// </summary>
			public CCadSegmentPoints StartSegmentOfPoints
			{
				get { return (mSegments[0] as CCadSegmentPoints); }
			}

			/// <summary>
			/// Конечный сегмент геометрии
			/// </summary>
			public CCadSegment EndSegment
			{
				get { return (mSegments[mSegments.Count - 1]); }
			}

			/// <summary>
			/// Количество сегментов
			/// </summary>
			public Int32 Count
			{
				get { return (mSegments.Count); }
			}
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CCadPrimitiveGeometry()
			{
				mSegments = new List<CCadSegment>();
			}
			#endregion

			#region ======================================= ОБЩИЕ МЕТОДЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление сегмента точек
			/// </summary>
			/// <param name="base_point">Базовая точка</param>
			/// <param name="next_point">Следующая точка</param>
			//---------------------------------------------------------------------------------------------------------
			public void AddSegmentPoints(ref Vector2Df base_point, ref Vector2Df next_point)
			{
				mSegments.Add(new CCadSegmentPoints(this, base_point, next_point));

				if (mIsCanvas)
				{
					// Обновляем данные
					Update();

					// Обновляем отображение примитива
					//XCadManager.Canvas.Update();
				}
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление сегмента точек
			/// </summary>
			/// <param name="base_point">Базовая точка</param>
			/// <param name="next_point">Следующая точка</param>
			//---------------------------------------------------------------------------------------------------------
			public void AddSegmentLine(ref Vector2Df base_point, ref Vector2Df next_point)
			{
				mSegments.Add(new CCadSegmentLine(this, base_point, next_point));

				if (mIsCanvas)
				{
					// Обновляем данные
					Update();

					// Обновляем отображение примитива
					//XCadManager.Canvas.Update();
				}
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление сегмента арки
			/// </summary>
			/// <param name="base_point">Базовая точка</param>
			/// <param name="size_arc">Размеры эллипса дуги</param>
			//---------------------------------------------------------------------------------------------------------
			public void AddSegmentArc(ref Vector2Df base_point, ref Vector2Df size_arc)
			{
				mSegments.Add(new CCadSegmentArc(this, base_point, size_arc));

				if (mIsCanvas)
				{
					// Обновляем данные
					Update();

					// Обновляем отображение примитива
					//XCadManager.Canvas.Update();
				}
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================