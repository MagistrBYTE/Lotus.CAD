//=====================================================================================================================
// Решение: LotusPlatform
// Раздел: Модуль чертежной графики
// Подраздел: Инструменты создания и редактирования графических элементов
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusCADToolCreateTable.cs
*		Инструмент для создания таблицы.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 04.04.2021
//=====================================================================================================================
using System;
using System.Collections.Generic;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Maths;
using Lotus.Core;
//=====================================================================================================================
namespace Lotus
{
	namespace CAD
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup CadTools
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Инструмент для создания текста
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public class CCadToolCreateTable : CCadTool<CCadShapeTable>
		{
			#region ======================================= ДАННЫЕ ====================================================
			protected CCadShapeTable mCurrentTable;
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CCadToolCreateTable()
			{
			}
			#endregion

			#region ======================================= CЛУЖЕБНЫЕ МЕТОДЫ ==========================================
			#endregion

			#region ======================================= ОБЩИЕ МЕТОДЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Нажатие кнопки мыши (Создание таблицы)
			/// </summary>
			/// <param name="pos">Позиция курсора в области канвы</param>
			/// <param name="button">Кнопка мыши связанная с данным событием</param>
			//---------------------------------------------------------------------------------------------------------
			public override void OnMouseDown(ref Vector2Df pos, TMouseButton button)
			{
				// Создаем таблицу
				//mCurrentTable = XCadManager.CreateShape("ShapeTable", "") as CCadShapeTable;

				// Если была включена привязка
				Vector2Df result = mCanvasViewer.SnapIsExsisting ? mCanvasViewer.SnapPoint : pos;
				mCurrentTable.Location = result;

				// Если есть активный документ то добавляем в него (на канву добавиться автоматически)
				//if (XManager.PresenterDocument != null)
				//{
				//	//XManager.PresenterDocument.AddExistingElement(mCurrentTable);
				//}
				//else
				//{
				//	XManager.Presenter.Elements.Add(mCurrentTable);
				//}

				//mCanvas.Update();
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Перемещение мыши
			/// </summary>
			/// <param name="pos">Позиция курсора в области канвы</param>
			/// <param name="button">Кнопка мыши связанная с данным событием</param>
			//---------------------------------------------------------------------------------------------------------
			public override void OnMouseMove(ref Vector2Df pos, TMouseButton button)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Отпускание кнопки мыши
			/// </summary>
			/// <param name="pos">Позиция курсора в области канвы</param>
			/// <param name="button">Кнопка мыши связанная с данным событием</param>
			//---------------------------------------------------------------------------------------------------------
			public override void OnMouseUp(ref Vector2Df pos, TMouseButton button)
			{

			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================