//=====================================================================================================================
// Решение: LotusPlatform
// Раздел: Модуль чертежной графики
// Подраздел: Графические примитивы
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusWindowsCADPrimitiveRect.cs
*		Графический примитив прямоугольника.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 27.03.2022
//=====================================================================================================================
using System;
using System.Linq;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows;
using System.Windows.Media;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
using Lotus.Maths;
//=====================================================================================================================
namespace Lotus
{
	namespace CAD
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup CadPrimitivs
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Графический примитив прямоугольника
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public class CCadWindowsPrimitiveRect : CCadPrimitiveRect
		{
			#region ======================================= ДАННЫЕ ====================================================
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CCadWindowsPrimitiveRect()
			{
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="rect">Прямоугольник</param>
			//---------------------------------------------------------------------------------------------------------
			public CCadWindowsPrimitiveRect(Rect2Df rect)
			{
				mBoundsRect = rect;
			}
			#endregion

			#region ======================================= ОБЩИЕ МЕТОДЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Обновление данных прямоугольника
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public override void Update()
			{
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Копирование графического примитива
			/// </summary>
			/// <returns>Дубликат графического примитива со всеми параметрами и данными</returns>
			//---------------------------------------------------------------------------------------------------------
			public override CCadPrimitive Duplicate()
			{
				CCadWindowsPrimitiveRect rect = new CCadWindowsPrimitiveRect();
				rect.CopyParamemtrs(this);
				rect.Update();
				return (rect);
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Копирование параметров с графического примитива
			/// </summary>
			/// <param name="primitiv">Графический примитив</param>
			//---------------------------------------------------------------------------------------------------------
			public override void CopyParamemtrs(CCadPrimitive primitiv)
			{
				base.CopyParamemtrs(primitiv);

				CCadWindowsPrimitiveRect source = primitiv as CCadWindowsPrimitiveRect;
				mBoundsRect = source.mBoundsRect;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Проверка раположения точки на контуре графического примитива
			/// </summary>
			/// <param name="point">Проверяемая точка</param>
			/// <param name="thickness">Толщина контура</param>
			/// <returns>Статус расположения</returns>
			//---------------------------------------------------------------------------------------------------------
			public override Boolean StrokeContains(ref Vector2Df point, Single thickness)
			{
				return (XIntersect2D.PointOnRectBorder(ref mBoundsRect, ref point, mStroke.Thickness));
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Проверка раположения точки внутри области графического примитива
			/// </summary>
			/// <param name="point">Проверяемая точка</param>
			/// <returns>Статус расположения</returns>
			//---------------------------------------------------------------------------------------------------------
			public override Boolean FillContains(ref Vector2Df point)
			{
				return (mBoundsRect.Contains(point));
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Вычисление площади графического примитива
			/// </summary>
			/// <returns>Площадь графического примитива</returns>
			//---------------------------------------------------------------------------------------------------------
			public override Double ComputeArea()
			{
				return (mBoundsRect.Area);
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Вычисление ограничивающего прямоугольника графического примитива
			/// </summary>
			/// <param name="dest_bounds_rect">Прямоугольник</param>
			//---------------------------------------------------------------------------------------------------------
			public override void ComputeBounds(ref Rect2Df dest_bounds_rect)
			{
				dest_bounds_rect = mBoundsRect;
			}
			#endregion

			#region ======================================= МЕТОДЫ РИСОВАНИЯ ==========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование прямоугольника
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public override void Draw()
			{
				//LotusCadCanvas.DrawingDevice.DrawRectangle(mIsFilled ? mFill.WindowsBrush : null,
				//	mIsStroked ? mStroke.WindowsPen : null, mBoundsRect.ToWinRect());
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================