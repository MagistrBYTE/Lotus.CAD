//=====================================================================================================================
// Решение: LotusPlatform
// Раздел: Модуль чертежной графики
// Подраздел: Инструменты создания и редактирования графических элементов
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusCADToolCreateEllipse.cs
*		Инструмент для создания эллипса.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 04.04.2021
//=====================================================================================================================
using System;
using System.Collections.Generic;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Maths;
using Lotus.Core;
//=====================================================================================================================
namespace Lotus
{
	namespace CAD
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup CadTools
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Инструмент для создания эллипса
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public class CCadToolCreateEllipse : CCadTool<CCadShapeEllipse>
		{
			#region ======================================= ДАННЫЕ ====================================================
			protected CCadShapeEllipse mCurrentEllipse;
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CCadToolCreateEllipse()
			{
			}
			#endregion

			#region ======================================= CЛУЖЕБНЫЕ МЕТОДЫ ==========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Начало создания эллипса
			/// </summary>
			/// <param name="pos">Позиция курсора в области канвы</param>
			//---------------------------------------------------------------------------------------------------------
			protected void StartCreateEllipse(ref Vector2Df pos)
			{
				// Создаем эллипс
				//mCurrentEllipse = XCadManager.CreateShape("ShapeEllipse", "") as CCadShapeEllipse;

				// Если была включена привязка
				Vector2Df result = mCanvasViewer.SnapIsExsisting ? mCanvasViewer.SnapPoint : pos;
				mCurrentEllipse.CreateStartRect(ref result);

				// Начало рисования прямоугольника
				mIsCreateElement = true;
				//mCanvas.SetCursor(TCursor.Cross);

				//// Если есть активный документ то добавляем в него (на канву добавиться автоматически)
				//if (XManager.PresenterDocument != null)
				//{
				//	//XManager.PresenterDocument.AddExistingElement(mCurrentEllipse);
				//}
				//else
				//{
				//	XManager.Presenter.Elements.Add(mCurrentEllipse);
				//}
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Окончание создания эллипса
			/// </summary>
			/// <param name="pos">Позиция курсора в области канвы</param>
			//---------------------------------------------------------------------------------------------------------
			protected void EndCreateEllipse(ref Vector2Df pos)
			{
				mIsCreateElement = false;

				//mCanvas.SetCursor(TCursor.Arrow);
				//XManager.MementoManager.AddStateToHistory(new CStateMementoElementAdd(mCurrentEllipse));

				// Если была включена привязка
				Vector2Df result = mCanvasViewer.SnapIsExsisting ? mCanvasViewer.SnapPoint : pos;

				mCurrentEllipse.CreateEndRect(ref result);
				mCurrentEllipse = null;
			}
			#endregion

			#region ======================================= ОБЩИЕ МЕТОДЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Нажатие кнопки мыши (Начало создание эллипса)
			/// </summary>
			/// <param name="pos">Позиция курсора в области канвы</param>
			/// <param name="button">Кнопка мыши связанная с данным событием</param>
			//---------------------------------------------------------------------------------------------------------
			public override void OnMouseDown(ref Vector2Df pos, TMouseButton button)
			{
				// Создания прямоугольника
				if (button == TMouseButton.Left)
				{
					if (mCanvasViewer.CreateModeIsAutoCAD)
					{
						if (mIsCreateElement == false)
						{
							StartCreateEllipse(ref pos);
						}
						else
						{
							EndCreateEllipse(ref pos);
						}
					}
					else
					{
						StartCreateEllipse(ref pos);
					}
				}
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Перемещение мыши (Продолжение создание эллипса)
			/// </summary>
			/// <param name="pos">Позиция курсора в области канвы</param>
			/// <param name="button">Кнопка мыши связанная с данным событием</param>
			//---------------------------------------------------------------------------------------------------------
			public override void OnMouseMove(ref Vector2Df pos, TMouseButton button)
			{
				if (mIsCreateElement)
				{
					mCurrentEllipse.CreateContinueRect(ref pos);
				}
				else
				{
					// Если выключен режим привязки
					//if (mCanvasViewer.SnapIsEnabled)
					//{
					//	// Перерисовываем канву
					//	mCanvas.Update();
					//}
				}
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Отпускание кнопки мыши
			/// </summary>
			/// <param name="pos">Позиция курсора в области канвы</param>
			/// <param name="button">Кнопка мыши связанная с данным событием</param>
			//---------------------------------------------------------------------------------------------------------
			public override void OnMouseUp(ref Vector2Df pos, TMouseButton button)
			{
				if (button == TMouseButton.Left && mIsCreateElement)
				{
					if (!mCanvasViewer.CreateModeIsAutoCAD)
					{
						EndCreateEllipse(ref pos);
					}
				}
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================