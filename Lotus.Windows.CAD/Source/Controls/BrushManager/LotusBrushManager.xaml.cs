//=====================================================================================================================
// Решение: LotusPlatform
// Раздел: Модуль чертежной графики
// Подраздел: Элементы управления
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusBrushManager.xaml.cs
*		Менеджер управления кистями.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.01.2022
//=====================================================================================================================
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
//---------------------------------------------------------------------------------------------------------------------
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
//=====================================================================================================================
namespace Lotus
{
	namespace CAD
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup CadControls
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Менеджер управления кистями
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public partial class LotusBrushManager : UserControl
		{
			#region ======================================= ДАННЫЕ ====================================================
			private ListCollectionView mCollectionViewBrushes;
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public LotusBrushManager()
			{
				InitializeComponent();

				if (XCadBrushManager.Brushes == null) XCadBrushManager.Init();
				mCollectionViewBrushes = new ListCollectionView(XCadBrushManager.Brushes);
				mCollectionViewBrushes.GroupDescriptions.Add(new PropertyGroupDescription(nameof(CCadBrush.Group)));
				dataBrushes.ItemsSource = mCollectionViewBrushes;
			}
			#endregion

			#region ======================================= УПРАВЛЕНИЕ КИСТЯМИ ========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Выбор кисти для редактирования свойств
			/// </summary>
			/// <param name="sender">Источник события</param>
			/// <param name="args">Аргументы события</param>
			//---------------------------------------------------------------------------------------------------------
			private void OnBrushManager_SelectionChanged(Object sender, SelectionChangedEventArgs args)
			{
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Двойной щелчок по объекту - Выбор кисти для редактирования свойств
			/// </summary>
			/// <param name="sender">Источник события</param>
			/// <param name="args">Аргументы события</param>
			//---------------------------------------------------------------------------------------------------------
			private void OnBrushManager_MouseDoubleClick(Object sender, MouseButtonEventArgs args)
			{
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление кисти к проекту
			/// </summary>
			/// <param name="sender">Источник события</param>
			/// <param name="args">Аргументы события</param>
			//---------------------------------------------------------------------------------------------------------
			private void OnBrushManager_Add(Object sender, RoutedEventArgs args)
			{
				XCadBrushManager.AddSolid("Новая кисть", "Пользовательские", TColor.Black, -1);
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Удаление кисти из проекта
			/// </summary>
			/// <param name="sender">Источник события</param>
			/// <param name="args">Аргументы события</param>
			//---------------------------------------------------------------------------------------------------------
			private void OnBrushManager_Remove(Object sender, RoutedEventArgs args)
			{
				CCadBrush brush = mCollectionViewBrushes.CurrentItem as CCadBrush;
				if (brush != null)
				{
					XCadBrushManager.Remove(brush);
				}
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================