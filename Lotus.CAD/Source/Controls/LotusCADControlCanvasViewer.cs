//=====================================================================================================================
// Решение: LotusPlatform
// Раздел: Модуль чертежной графики
// Подраздел: Элементы управления
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusCADControlCanvasViewer.cs
*		Интерфейс элемента пользовательского интерфейса для представления и управления канвой.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 27.03.2022
//=====================================================================================================================
using System;
using System.ComponentModel;
using System.IO;
using System.Xml;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
using Lotus.Maths;
//=====================================================================================================================
namespace Lotus
{
	namespace CAD
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup CadControls
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Интерфейс элемента пользовательского интерфейса для представления и управления канвой
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICadCanvasViewer : INotifyPropertyChanged
		{
			#region ======================================= СВОЙСТВА ==================================================
			//
			// ОСНОВНЫЕ ПАРАМЕТРЫ
			//
			/// <summary>
			/// Список графических объектов отображаемых на канве
			/// </summary>
			ListArray<ICadObject> Elements { get; }

			/// <summary>
			/// Текущий отображаемый чертеж
			/// </summary>
			CCadDraft Draft { get; set; }

			/// <summary>
			/// Текущий выбранный инструмент
			/// </summary>
			CCadTool Tool { get; set; }

			/// <summary>
			/// Объект содержащий список выбранных объектов
			/// </summary>
			CCadSelecting Selecting { get; }

			/// <summary>
			/// Менеджер для отмены/повторения действия
			/// </summary>
			ILotusMementoManager Memento { get; }

			//
			// ПОЗИЦИЯ И СМЕЩЕНИЕ КУРСОРА
			//
			/// <summary>
			/// Смещение курсора в координатах канвы
			/// </summary>
			Vector2Df PointerDelta { get; }

			/// <summary>
			/// Позиция курсора в координатах канвы
			/// </summary>
			Vector2Df PointerPosition { get; }

			//
			// АДАПТИВНЫЙ МАСШТАБ
			//
			/// <summary>
			/// Текущий масштаб увеличения канвы
			/// </summary>
			Single Zoom { get; }

			/// <summary>
			/// Фиксированный адаптивный масштаб канвы
			/// </summary>
			Single ZoomAdaptive { get; }

			/// <summary>
			/// Обратный масштаб канвы
			/// </summary>
			Single ZoomInverse { get; }

			/// <summary>
			/// Фиксированный адаптивный обратный масштаб канвы
			/// </summary>
			Single ZoomInverseAdaptive { get; }

			//
			// ПАРАМЕТРЫ ПРИВЯЗКИ
			//
			/// <summary>
			/// Режим включения привязки
			/// </summary>
			Boolean SnapIsEnabled { get; set; }

			/// <summary>
			/// Индекс текущей точки привязки
			/// </summary>
			Int32 SnapIndexPoint { get; }

			/// <summary>
			/// Режим включения привязки к существующей точки привязки
			/// </summary>
			Boolean SnapIsExsisting { get; }

			/// <summary>
			/// Текущая точки привязки
			/// </summary>
			Vector2Df SnapPoint { get; }

			/// <summary>
			/// Смещение курсора мыши в координатах канвы от текущей точки привязки
			/// </summary>
			Vector2Df SnapMouseOffsetCanvas { get; }

			//
			// РЕЖИМ РЕДАКТИРОВАНИЯ
			//
			/// <summary>
			/// Создание графических элементов в режиме AutoCAD
			/// </summary>
			Boolean CreateModeIsAutoCAD { get; set; }

			/// <summary>
			/// Редактирование графических элементов в режиме AutoCAD
			/// </summary>
			Boolean EditModeIsAutoCAD { get; set; }
			#endregion

			#region ======================================= ОБЩИЕ МЕТОДЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Установка текущего курсора
			/// </summary>
			/// <param name="cursor">Курсор</param>
			//---------------------------------------------------------------------------------------------------------
			void SetCursor(TCursor cursor);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Анимация масштабирования указанной области канвы
			/// </summary>
			/// <param name="content_rect">Прямоугольник области канвы</param>
			//---------------------------------------------------------------------------------------------------------
			void AnimatedZoomTo(Rect2Df content_rect);
			#endregion

			#region ======================================= МЕТОДЫ РАБОТЫ С ЭЛЕМЕНТАМИ ================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавления графического объекта на канву
			/// </summary>
			/// <param name="cad_object">Графический объект</param>
			/// <returns>Статус успешности добавления</returns>
			//---------------------------------------------------------------------------------------------------------
			Boolean AddObject(ICadObject cad_object);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Удаления графического объекта с канвы
			/// </summary>
			/// <param name="cad_object">Графический объект</param>
			/// <returns>Статус успешности уд</returns>
			//---------------------------------------------------------------------------------------------------------
			Boolean RemoveObject(ICadObject cad_object);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Сортировка графических объектов по глубине
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			void SortByZIndex();
			#endregion

			#region ======================================= МЕТОДЫ РИСОВАНИЯ ==========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Установка матрицы трансформации
			/// </summary>
			/// <param name="transform">Матрица трансформации</param>
			//---------------------------------------------------------------------------------------------------------
			void SetTransform(CCadTransform transform);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Восстановление матрицы трансформации
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			void ResetTransform();

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Установка прозрачности рисования графических объектов
			/// </summary>
			/// <param name="opacity">Прозрачность</param>
			//---------------------------------------------------------------------------------------------------------
			void SetOpacity(Single opacity);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Восстановление прозрачности рисования графических объектов
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			void ResetOpacity();

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование линии с параметрами отображения по умолчанию
			/// </summary>
			/// <param name="start_point">Начальная точка</param>
			/// <param name="end_point">Конечная точка</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawLine(ref Vector2Df start_point, ref Vector2Df end_point);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование линии
			/// </summary>
			/// <param name="start_point">Начальная точка</param>
			/// <param name="end_point">Конечная точка</param>
			/// <param name="stroke">Перо для отображения</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawLine(ref Vector2Df start_point, ref Vector2Df end_point, CCadPen stroke);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование линии
			/// </summary>
			/// <param name="start_point">Начальная точка</param>
			/// <param name="end_point">Конечная точка</param>
			/// <param name="brush">Кисть для отрисовки</param>
			/// <param name="thickness">Толщина линии</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawLine(ref Vector2Df start_point, ref Vector2Df end_point, CCadBrush brush, Single thickness = 1.0f);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование прямоугольника с параметрами отображения по умолчанию
			/// </summary>
			/// <param name="rect">Прямоугольник</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawRectangle(ref Rect2Df rect);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование прямоугольника
			/// </summary>
			/// <param name="rect">Прямоугольник</param>
			/// <param name="stroke">Перо для отображения</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawRectangle(ref Rect2Df rect, CCadPen stroke);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование прямоугольника
			/// </summary>
			/// <param name="rect">Прямоугольник</param>
			/// <param name="brush">Кисть для отрисовки</param>
			/// <param name="thickness">Толщина линии</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawRectangle(ref Rect2Df rect, CCadBrush brush, Single thickness = 1.0f);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование эллипса с параметрами отображения по умолчанию
			/// </summary>
			/// <param name="rect">Прямоугольник</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawEllipse(ref Rect2Df rect);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование эллипса
			/// </summary>
			/// <param name="rect">Прямоугольник</param>
			/// <param name="stroke">Перо для отображения</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawEllipse(ref Rect2Df rect, CCadPen stroke);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование эллипса
			/// </summary>
			/// <param name="rect">Прямоугольник</param>
			/// <param name="brush">Кисть для отрисовки</param>
			/// <param name="thickness">Толщина линии</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawEllipse(ref Rect2Df rect, CCadBrush brush, Single thickness = 1.0f);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование прямоугольника ручки указанной точки
			/// </summary>
			/// <param name="point">Точка</param>
			/// <param name="is_selected">Статус выбора фигуры</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawHandleRect(Vector2Df point, Boolean is_selected);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование прямоугольника ручки указанной точки
			/// </summary>
			/// <param name="point">Точка</param>
			/// <param name="is_selected">Статус выбора фигуры</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawHandleRect(ref Vector2Df point, Boolean is_selected);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование прямоугольника ручки
			/// </summary>
			/// <param name="rect">Прямоугольник ручки</param>
			/// <param name="is_selected">Статус выбора фигуры</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawHandleRect(Rect2Df rect, Boolean is_selected);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Рисование прямоугольника ручки
			/// </summary>
			/// <param name="rect">Прямоугольник ручки</param>
			/// <param name="is_selected">Статус выбора фигуры</param>
			//---------------------------------------------------------------------------------------------------------
			void DrawHandleRect(ref Rect2Df rect, Boolean is_selected);
			#endregion

			#region ======================================= МЕТОДЫ ПРОВЕРКИ ПОПАДАНИЙ =================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Проверка прямоугольника на видимость в пределах области просмотра
			/// </summary>
			/// <param name="rect">Проверяемый прямоугольник</param>
			/// <returns>Статус видимости</returns>
			//---------------------------------------------------------------------------------------------------------
			Boolean CheckRectVisibleInViewport(ref Rect2Df rect);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Проверка прямоугольника на видимость в пределах области просмотра
			/// </summary>
			/// <param name="rect">Проверяемый прямоугольник</param>
			/// <returns>Статус видимости</returns>
			//---------------------------------------------------------------------------------------------------------
			Boolean CheckRectVisibleInViewport(Rect2Df rect);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Проверка точки на видимость в пределах области просмотра
			/// </summary>
			/// <param name="point">Проверяемая точка</param>
			/// <returns>Статус видимости</returns>
			//---------------------------------------------------------------------------------------------------------
			Boolean CheckPointVisibleInViewport(ref Vector2Df point);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Проверка точки на видимость в пределах области просмотра
			/// </summary>
			/// <param name="point">Проверяемая точка</param>
			/// <returns>Статус видимости</returns>
			//---------------------------------------------------------------------------------------------------------
			Boolean CheckPointVisibleInViewport(Vector2Df point);
			#endregion

			#region ======================================= МЕТОДЫ РАБОТЫ С КОНТЕКСТНЫМ МЕНЮ ==========================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление в контекстное меню команды
			/// </summary>
			/// <param name="command_name">Имя команды</param>
			//---------------------------------------------------------------------------------------------------------
			void AddCommandContextMenu(String command_name);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Удаление из контекстное меню команды
			/// </summary>
			/// <param name="command_name">Имя команды</param>
			//---------------------------------------------------------------------------------------------------------
			void RemoveCommandContextMenu(String command_name);
			#endregion

			#region ======================================= МЕТОДЫ РАБОТЫ С РУЧКАМИ ===================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение прямоугольника ручки указанной точки
			/// </summary>
			/// <param name="point">Точка</param>
			/// <returns>Прямоугольник</returns>
			//---------------------------------------------------------------------------------------------------------
			Rect2Df GetHandleRect(Vector2Df point);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение прямоугольника ручки указанной точки
			/// </summary>
			/// <param name="point">Точка</param>
			/// <returns>Прямоугольник</returns>
			//---------------------------------------------------------------------------------------------------------
			Rect2Df GetHandleRect(ref Vector2Df point);
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================